---
name: Ansible CI
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - labeled
  workflow_dispatch:

concurrency:
  group: ansible-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ANSIBLE_FORCE_COLOR: true
  ANSIBLE_GALAXY_SERVER_GALAXY_URL: "https://galaxy.ansible.com"
  ANSIBLE_GALAXY_SERVER_GALAXY_TIMEOUT: 120
  ANSIBLE_GALAXY_SERVER_LIST: "galaxy"

jobs:
  pr-label:
    runs-on: ubuntu-latest
    steps:
      - name: "Confirm correct pull request title"
        uses: deepakputhraya/action-pr-title@master
        with:
          allowed_prefixes: 'feat,feature,fix,major,breaking,minor,enhancement,deprecated,removed,security,bug,bugfix,docs,packaging,test,refactor,refactoring,skip-release,skip_changelog'

      - name: "Apply label"
        if: github.event.pull_request.labels.length == 0
        uses: bcoe/conventional-release-labels@v1
        with:
          type_labels: |
              {
              "feature": "enhancement",
              "feat": "enhancement",
              "fix": "bugfix",
              "major": "major",
              "breaking": "breaking",
              "minor": "minor",
              "enhancement": "enhancement",
              "deprecated": "deprecated",
              "removed": "removed",
              "security": "security",
              "bug": "bug",
              "bugfix": "bugfix",
              "docs": "trivial",
              "packaging": "trivial",
              "test": "trivial",
              "refactor": "trivial",
              "refactoring": "trivial",
              "skip-release": "skip_changelog",
              "skip_changelog": "skip_changelog"
              }

  role-label:
    runs-on: ubuntu-latest
    needs: pr-label
    if: github.event.pull_request.labels.length == 0
    steps:
      - uses: actions/checkout@v3

      - name: Get changed roles
        id: changed-roles
        uses: tj-actions/changed-files@v35
        with:
          path: "roles"
          diff_relative: "true"
          files: "**"
          dir_names: "true"
          dir_names_max_depth: "1"
          since_last_remote_commit: "true"

      - name: Add changed roles labels
        uses: actions/github-script@v6
        if: |
          steps.changed-roles.outputs.all_changed_and_modified_files
        with:
          script: |
            const labels = '${{ steps.changed-roles.outputs.all_changed_and_modified_files }}'.split(' ');
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labels
            })

  ansible-lint:
    runs-on: ubuntu-latest
    needs: pr-label
    steps:
      - uses: actions/checkout@v3

      - name: Lint collection
        uses: ansible/ansible-lint-action@main

  discover-ansible-versions:
    runs-on: ubuntu-latest
    needs: pr-label
    outputs:
      versions: ${{ steps.supported-ansible-versions.outputs.result }}
    steps:
      - uses: actions/checkout@v3

      - name: Get Ansible versions that the collection supports
        id: supported-ansible-versions
        uses: mikefarah/yq@master
        with:
          cmd: yq -o json -I=0 '.requires_ansible | split(",") | .[] |= sub("(.*?)(\d+\.\d+)(.*)"; "stable-${2}")' meta/runtime.yml

  ansible-test-sanity:
    if: |
      !github.event.label
    uses: ./.github/workflows/ansible-test-sanity.yml
    needs:
      - ansible-lint
      - discover-ansible-versions
    with:
      ansible-core-versions: ${{ needs.discover-ansible-versions.outputs.versions }}

  discover-ansible-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      needs:
        pr-label
        ansible-lint
    outputs:
      molecule-tests: ${{ steps.set-molecule-tests.outputs.tests }}
      integration-tests: ${{ steps.set-integration-tests.outputs.tests }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

            #      - name: Get changed roles
            #        id: changed-roles
            #        uses: tj-actions/changed-files@v35
            #        with:
            #          path: "roles"
            #          diff_relative: "true"
            #          files: "**"
            #          dir_names: "true"
            #          dir_names_max_depth: "1"
            #          since_last_remote_commit: "true"
            #
            #      - name: Add changed roles labels
            #        uses: actions/github-script@v6
            #        if: |
            #          steps.changed-roles.outputs.all_changed_and_modified_files
            #        with:
            #          script: |
            #            const labels = '${{ steps.changed-roles.outputs.all_changed_and_modified_files }}'.split(' ');
            #            github.rest.issues.addLabels({
            #              issue_number: context.issue.number,
            #              owner: context.repo.owner,
            #              repo: context.repo.repo,
            #              labels: labels
            #            })

      - name: Discover role tests
        id: set-molecule-tests
        env:
          LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
        run: |
          roles=$(echo $LABELS | jq -r '.[]')
          echo tests="[`for role in $roles; do
            for test in $(find tests/integration/targets -maxdepth 1 -mindepth 1 -type d -iname "molecule-${role}-*" -printf "%f\n"); do
              echo '{"test":\"'"${test}"'\","name":\"'"${test#*-}\"'"}';
            done
          done | tr '\n' ',' | sed '$s/,$//'`]" >> $GITHUB_OUTPUT

      - name: Discover integration tests
        id: set-integration-tests
        run: |
          echo tests="[`for test in $(find tests/integration/targets -maxdepth 1 -mindepth 1 -type d -not -iname "molecule-*" -printf "%f\n"); do
            echo '{"test":\"'"${test}"'\","name":\"'"${test}\"'"}';
          done | tr '\n' ',' | sed '$s/,$//'`]" >> $GITHUB_OUTPUT

  ansible-test-molecule:
    uses: ./.github/workflows/ansible-test-integration.yml
    needs:
      - discover-ansible-tests
      - discover-ansible-versions
    if: needs.discover-ansible-tests.outputs.molecule-tests != '[]' &&
        needs.discover-ansible-tests.outputs.molecule-tests != ''
    with:
      targets: ${{ needs.discover-ansible-tests.outputs.molecule-tests }}
      ansible-core-versions: ${{ needs.discover-ansible-versions.outputs.versions }}

  ansible-test-integration:
    uses: ./.github/workflows/ansible-test-integration.yml
    needs:
      - discover-ansible-tests
      - discover-ansible-versions
    if:
      needs.discover-ansible-tests.outputs.integration-tests != '[]' &&
      needs.discover-ansible-tests.outputs.integration-tests != ''
    with:
      targets: ${{ needs.discover-ansible-tests.outputs.integration-tests }}
      ansible-core-versions: ${{ needs.discover-ansible-versions.outputs.versions }}
