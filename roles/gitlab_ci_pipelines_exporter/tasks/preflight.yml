---
- name: Assert usage of systemd as an init system
  ansible.builtin.assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This role only works with systemd"

- name: Install package fact dependencies
  become: true
  ansible.builtin.package:
    name: "{{ _pkg_fact_req }}"
    state: present
  when: (_pkg_fact_req)
  vars:
    _pkg_fact_req: "{% if (ansible_pkg_mgr == 'apt') %}\
      {{ ('python-apt' if ansible_python_version is version('3', '<') else 'python3-apt') }}
      {% else %}\
      {% endif %}"

- name: Gather package facts
  ansible.builtin.package_facts:
  when: "not 'packages' in ansible_facts"

- name: Naive assertion of proper listen address
  ansible.builtin.assert:
    that:
      - "':' in gitlab_ci_pipelines_exporter_web_listen_address"

- name: Check if gitlab_ci_pipelines_exporter is installed
  ansible.builtin.stat:
    path: "{{ gitlab_ci_pipelines_exporter_binary_install_dir }}/gitlab_ci_pipelines_exporter"
  register: __gitlab_ci_pipelines_exporter_is_installed
  check_mode: false
  tags:
    - gitlab_ci_pipelines_exporter_install

- name: Gather currently installed gitlab_ci_pipelines_exporter version (if any)
  ansible.builtin.command: "{{ gitlab_ci_pipelines_exporter_binary_install_dir }}/gitlab_ci_pipelines_exporter --version"
  changed_when: false
  register: __gitlab_ci_pipelines_exporter_current_version_output
  check_mode: false
  when: __gitlab_ci_pipelines_exporter_is_installed.stat.exists
  tags:
    - gitlab_ci_pipelines_exporter_install

- name: Discover latest version
  ansible.builtin.set_fact:
    gitlab_ci_pipelines_exporter_version: "{{ (lookup('url', 'https://api.github.com/repos/{{ _gitlab_ci_pipelines_exporter_repo }}/releases/latest', headers=_github_api_headers,
                            split_lines=False) | from_json).get('tag_name') | replace('v', '') }}"
  run_once: true
  until: gitlab_ci_pipelines_exporter_version is version('0.0.0', '>=')
  retries: 10
  when:
    - gitlab_ci_pipelines_exporter_version == "latest"
    - gitlab_ci_pipelines_exporter_binary_local_dir | length == 0
    - not gitlab_ci_pipelines_exporter_skip_install

- name: Get gitlab_ci_pipelines_exporter binary checksum
  when:
    - gitlab_ci_pipelines_exporter_binary_local_dir | length == 0
    - not gitlab_ci_pipelines_exporter_skip_install
  block:
    - name: Get checksum list from github
      ansible.builtin.set_fact:
        __gitlab_ci_pipelines_exporter_checksums: "{{ lookup('url', gitlab_ci_pipelines_exporter_checksums_url, headers=_github_api_headers, wantlist=True) | list }}"
      run_once: true
      until: __gitlab_ci_pipelines_exporter_checksums is search('linux-' + go_arch + '.tar.gz')
      retries: 10

    - name: "Get checksum for {{ go_arch }}"
      ansible.builtin.set_fact:
        __gitlab_ci_pipelines_exporter_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ __gitlab_ci_pipelines_exporter_checksums }}"
      when: "('linux-' + go_arch + '.tar.gz') in item"
