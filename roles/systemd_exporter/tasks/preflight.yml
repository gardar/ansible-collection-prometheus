---
- name: Common preflight
  ansible.builtin.include_role:
    name: prometheus.prometheus._common
    tasks_from: preflight.yml

- name: Assert that used version supports listen address type
  ansible.builtin.assert:
    that:
      - >-
        systemd_exporter_web_listen_address is string

- name: Naive assertion of proper listen address
  ansible.builtin.assert:
    that:
      - >-
        [systemd_exporter_web_listen_address] |
          flatten |
          reject('match', '.+:\\d+$') |
          list |
          length == 0

- name: Assert that TLS config is correct
  when: systemd_exporter_tls_server_config | length > 0
  block:
    - name: Assert that systemd_exporter version supports TLS config
      ansible.builtin.assert:
        that:
          - "systemd_exporter_version is version('0.5.0', '>=')"

    - name: Assert that TLS key and cert path are set
      ansible.builtin.assert:
        that:
          - "systemd_exporter_tls_server_config.cert_file is defined"
          - "systemd_exporter_tls_server_config.key_file is defined"

    - name: Check existence of TLS cert file
      ansible.builtin.stat:
        path: "{{ systemd_exporter_tls_server_config.cert_file }}"
      register: __systemd_exporter_cert_file

    - name: Check existence of TLS key file
      ansible.builtin.stat:
        path: "{{ systemd_exporter_tls_server_config.key_file }}"
      register: __systemd_exporter_key_file

    - name: Assert that TLS key and cert are present
      ansible.builtin.assert:
        that:
          - "__systemd_exporter_cert_file.stat.exists"
          - "__systemd_exporter_key_file.stat.exists"

- name: Assert that systemd version is >= 235 when enabling ip accounting or measuring restart count
  ansible.builtin.assert:
    that:
      - (ansible_facts.packages.systemd | first).version is version('235', '>=')
  when: systemd_exporter_enable_ip_accounting or systemd_exporter_enable_restart_count

- name: Set user and group to root to allow access to /proc/X/fd
  ansible.builtin.set_fact:
    systemd_exporter_system_group: "root"
    systemd_exporter_system_user: "root"
  when: systemd_exporter_enable_file_descriptor_size

- name: Check if systemd_exporter is installed
  ansible.builtin.stat:
    path: "{{ systemd_exporter_binary_install_dir }}/systemd_exporter"
  register: __systemd_exporter_is_installed
  check_mode: false
  tags:
    - systemd_exporter_install

- name: Gather currently installed systemd_exporter version (if any)
  ansible.builtin.command:
    cmd: "{{ systemd_exporter_binary_install_dir }}/systemd_exporter --version"
  changed_when: false
  register: __systemd_exporter_current_version_output
  check_mode: false
  when: __systemd_exporter_is_installed.stat.exists
  tags:
    - systemd_exporter_install

- name: Discover latest version
  ansible.builtin.set_fact:
    systemd_exporter_version: "{{ (lookup('url', 'https://api.github.com/repos/{{ _systemd_exporter_repo }}/releases/latest',
                               headers=_github_api_headers, split_lines=False) | from_json).get('tag_name') | replace('v', '') }}"
  run_once: true
  until: systemd_exporter_version is version('0.0.0', '>=')
  retries: 10
  when:
    - systemd_exporter_version == "latest"
    - not systemd_exporter_skip_download
  tags:
    - systemd_exporter_install
